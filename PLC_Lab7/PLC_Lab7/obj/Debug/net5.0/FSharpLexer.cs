//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Fazer4900\Desktop\New folder (2)\PLC_Lab7\PLC_Lab7\PLC_Lab7_expr.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace PLC_Lab7 {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class FSharpLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		COMMENT=25, INT=26, FLOAT=27, BOOL=28, STRING=29, TRUE=30, FALSE=31, ID=32, 
		INT_LITERAL=33, FLOAT_LITERAL=34, STRING_LITERAL=35, WS=36;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "LETTER", 
		"DIGIT", "NONZERO", "HEX_DIGIT", "EXPONENT", "ESCAPE_SEQUENCE", "COMMENT", 
		"INT", "FLOAT", "BOOL", "STRING", "TRUE", "FALSE", "ID", "INT_LITERAL", 
		"FLOAT_LITERAL", "STRING_LITERAL", "WS"
	};


	public FSharpLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "','", "'read'", "'write'", "'{'", "'}'", "'if'", "'('", 
		"')'", "'else'", "'while'", "'='", "'||'", "'&&'", "'=='", "'!='", "'<'", 
		"'>'", "'+'", "'-'", "'*'", "'/'", "'%'", "'!'", null, "'int'", "'float'", 
		"'bool'", "'string'", "'true'", "'false'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, "COMMENT", "INT", "FLOAT", "BOOL", "STRING", "TRUE", "FALSE", "ID", 
		"INT_LITERAL", "FLOAT_LITERAL", "STRING_LITERAL", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "PLC_Lab7_expr.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2&\x107\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x4+\t+\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3"+
		"\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\b\x3\t"+
		"\x3\t\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f"+
		"\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3"+
		"\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3"+
		"\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3"+
		"\x1A\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x5\x1E\xA5"+
		"\n\x1E\x3\x1E\x6\x1E\xA8\n\x1E\r\x1E\xE\x1E\xA9\x3\x1F\x3\x1F\x3\x1F\x3"+
		" \x3 \x3 \x3 \a \xB3\n \f \xE \xB6\v \x3 \x3 \x3!\x3!\x3!\x3!\x3\"\x3"+
		"\"\x3\"\x3\"\x3\"\x3\"\x3#\x3#\x3#\x3#\x3#\x3$\x3$\x3$\x3$\x3$\x3$\x3"+
		"$\x3%\x3%\x3%\x3%\x3%\x3&\x3&\x3&\x3&\x3&\x3&\x3\'\x3\'\x3\'\a\'\xDE\n"+
		"\'\f\'\xE\'\xE1\v\'\x3(\x6(\xE4\n(\r(\xE(\xE5\x3)\x6)\xE9\n)\r)\xE)\xEA"+
		"\x3)\x3)\a)\xEF\n)\f)\xE)\xF2\v)\x3)\x5)\xF5\n)\x3*\x3*\x3*\a*\xFA\n*"+
		"\f*\xE*\xFD\v*\x3*\x3*\x3+\x6+\x102\n+\r+\xE+\x103\x3+\x3+\x2\x2\x2,\x3"+
		"\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2"+
		"\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12"+
		"#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33"+
		"\x2\x2\x35\x2\x2\x37\x2\x2\x39\x2\x2;\x2\x2=\x2\x2?\x2\x1B\x41\x2\x1C"+
		"\x43\x2\x1D\x45\x2\x1EG\x2\x1FI\x2 K\x2!M\x2\"O\x2#Q\x2$S\x2%U\x2&\x3"+
		"\x2\f\x4\x2\x43\\\x63|\x3\x2\x32;\x3\x2\x33;\x5\x2\x32;\x43H\x63h\x4\x2"+
		"GGgg\x4\x2--//\a\x2$$^^ppttvv\x4\x2\f\f\xF\xF\x4\x2$$^^\x5\x2\v\f\xF\xF"+
		"\"\"\x10C\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3"+
		"\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3"+
		"\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2"+
		"\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2"+
		"\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2"+
		")\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3"+
		"\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45"+
		"\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2"+
		"\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2\x2"+
		"\x3W\x3\x2\x2\x2\x5Y\x3\x2\x2\x2\a[\x3\x2\x2\x2\t`\x3\x2\x2\x2\v\x66\x3"+
		"\x2\x2\x2\rh\x3\x2\x2\x2\xFj\x3\x2\x2\x2\x11m\x3\x2\x2\x2\x13o\x3\x2\x2"+
		"\x2\x15q\x3\x2\x2\x2\x17v\x3\x2\x2\x2\x19|\x3\x2\x2\x2\x1B~\x3\x2\x2\x2"+
		"\x1D\x81\x3\x2\x2\x2\x1F\x84\x3\x2\x2\x2!\x87\x3\x2\x2\x2#\x8A\x3\x2\x2"+
		"\x2%\x8C\x3\x2\x2\x2\'\x8E\x3\x2\x2\x2)\x90\x3\x2\x2\x2+\x92\x3\x2\x2"+
		"\x2-\x94\x3\x2\x2\x2/\x96\x3\x2\x2\x2\x31\x98\x3\x2\x2\x2\x33\x9A\x3\x2"+
		"\x2\x2\x35\x9C\x3\x2\x2\x2\x37\x9E\x3\x2\x2\x2\x39\xA0\x3\x2\x2\x2;\xA2"+
		"\x3\x2\x2\x2=\xAB\x3\x2\x2\x2?\xAE\x3\x2\x2\x2\x41\xB9\x3\x2\x2\x2\x43"+
		"\xBD\x3\x2\x2\x2\x45\xC3\x3\x2\x2\x2G\xC8\x3\x2\x2\x2I\xCF\x3\x2\x2\x2"+
		"K\xD4\x3\x2\x2\x2M\xDA\x3\x2\x2\x2O\xE3\x3\x2\x2\x2Q\xE8\x3\x2\x2\x2S"+
		"\xF6\x3\x2\x2\x2U\x101\x3\x2\x2\x2WX\a=\x2\x2X\x4\x3\x2\x2\x2YZ\a.\x2"+
		"\x2Z\x6\x3\x2\x2\x2[\\\at\x2\x2\\]\ag\x2\x2]^\a\x63\x2\x2^_\a\x66\x2\x2"+
		"_\b\x3\x2\x2\x2`\x61\ay\x2\x2\x61\x62\at\x2\x2\x62\x63\ak\x2\x2\x63\x64"+
		"\av\x2\x2\x64\x65\ag\x2\x2\x65\n\x3\x2\x2\x2\x66g\a}\x2\x2g\f\x3\x2\x2"+
		"\x2hi\a\x7F\x2\x2i\xE\x3\x2\x2\x2jk\ak\x2\x2kl\ah\x2\x2l\x10\x3\x2\x2"+
		"\x2mn\a*\x2\x2n\x12\x3\x2\x2\x2op\a+\x2\x2p\x14\x3\x2\x2\x2qr\ag\x2\x2"+
		"rs\an\x2\x2st\au\x2\x2tu\ag\x2\x2u\x16\x3\x2\x2\x2vw\ay\x2\x2wx\aj\x2"+
		"\x2xy\ak\x2\x2yz\an\x2\x2z{\ag\x2\x2{\x18\x3\x2\x2\x2|}\a?\x2\x2}\x1A"+
		"\x3\x2\x2\x2~\x7F\a~\x2\x2\x7F\x80\a~\x2\x2\x80\x1C\x3\x2\x2\x2\x81\x82"+
		"\a(\x2\x2\x82\x83\a(\x2\x2\x83\x1E\x3\x2\x2\x2\x84\x85\a?\x2\x2\x85\x86"+
		"\a?\x2\x2\x86 \x3\x2\x2\x2\x87\x88\a#\x2\x2\x88\x89\a?\x2\x2\x89\"\x3"+
		"\x2\x2\x2\x8A\x8B\a>\x2\x2\x8B$\x3\x2\x2\x2\x8C\x8D\a@\x2\x2\x8D&\x3\x2"+
		"\x2\x2\x8E\x8F\a-\x2\x2\x8F(\x3\x2\x2\x2\x90\x91\a/\x2\x2\x91*\x3\x2\x2"+
		"\x2\x92\x93\a,\x2\x2\x93,\x3\x2\x2\x2\x94\x95\a\x31\x2\x2\x95.\x3\x2\x2"+
		"\x2\x96\x97\a\'\x2\x2\x97\x30\x3\x2\x2\x2\x98\x99\a#\x2\x2\x99\x32\x3"+
		"\x2\x2\x2\x9A\x9B\t\x2\x2\x2\x9B\x34\x3\x2\x2\x2\x9C\x9D\t\x3\x2\x2\x9D"+
		"\x36\x3\x2\x2\x2\x9E\x9F\t\x4\x2\x2\x9F\x38\x3\x2\x2\x2\xA0\xA1\t\x5\x2"+
		"\x2\xA1:\x3\x2\x2\x2\xA2\xA4\t\x6\x2\x2\xA3\xA5\t\a\x2\x2\xA4\xA3\x3\x2"+
		"\x2\x2\xA4\xA5\x3\x2\x2\x2\xA5\xA7\x3\x2\x2\x2\xA6\xA8\x5\x35\x1B\x2\xA7"+
		"\xA6\x3\x2\x2\x2\xA8\xA9\x3\x2\x2\x2\xA9\xA7\x3\x2\x2\x2\xA9\xAA\x3\x2"+
		"\x2\x2\xAA<\x3\x2\x2\x2\xAB\xAC\a^\x2\x2\xAC\xAD\t\b\x2\x2\xAD>\x3\x2"+
		"\x2\x2\xAE\xAF\a\x31\x2\x2\xAF\xB0\a\x31\x2\x2\xB0\xB4\x3\x2\x2\x2\xB1"+
		"\xB3\n\t\x2\x2\xB2\xB1\x3\x2\x2\x2\xB3\xB6\x3\x2\x2\x2\xB4\xB2\x3\x2\x2"+
		"\x2\xB4\xB5\x3\x2\x2\x2\xB5\xB7\x3\x2\x2\x2\xB6\xB4\x3\x2\x2\x2\xB7\xB8"+
		"\b \x2\x2\xB8@\x3\x2\x2\x2\xB9\xBA\ak\x2\x2\xBA\xBB\ap\x2\x2\xBB\xBC\a"+
		"v\x2\x2\xBC\x42\x3\x2\x2\x2\xBD\xBE\ah\x2\x2\xBE\xBF\an\x2\x2\xBF\xC0"+
		"\aq\x2\x2\xC0\xC1\a\x63\x2\x2\xC1\xC2\av\x2\x2\xC2\x44\x3\x2\x2\x2\xC3"+
		"\xC4\a\x64\x2\x2\xC4\xC5\aq\x2\x2\xC5\xC6\aq\x2\x2\xC6\xC7\an\x2\x2\xC7"+
		"\x46\x3\x2\x2\x2\xC8\xC9\au\x2\x2\xC9\xCA\av\x2\x2\xCA\xCB\at\x2\x2\xCB"+
		"\xCC\ak\x2\x2\xCC\xCD\ap\x2\x2\xCD\xCE\ai\x2\x2\xCEH\x3\x2\x2\x2\xCF\xD0"+
		"\av\x2\x2\xD0\xD1\at\x2\x2\xD1\xD2\aw\x2\x2\xD2\xD3\ag\x2\x2\xD3J\x3\x2"+
		"\x2\x2\xD4\xD5\ah\x2\x2\xD5\xD6\a\x63\x2\x2\xD6\xD7\an\x2\x2\xD7\xD8\a"+
		"u\x2\x2\xD8\xD9\ag\x2\x2\xD9L\x3\x2\x2\x2\xDA\xDF\x5\x33\x1A\x2\xDB\xDE"+
		"\x5\x33\x1A\x2\xDC\xDE\x5\x35\x1B\x2\xDD\xDB\x3\x2\x2\x2\xDD\xDC\x3\x2"+
		"\x2\x2\xDE\xE1\x3\x2\x2\x2\xDF\xDD\x3\x2\x2\x2\xDF\xE0\x3\x2\x2\x2\xE0"+
		"N\x3\x2\x2\x2\xE1\xDF\x3\x2\x2\x2\xE2\xE4\x5\x35\x1B\x2\xE3\xE2\x3\x2"+
		"\x2\x2\xE4\xE5\x3\x2\x2\x2\xE5\xE3\x3\x2\x2\x2\xE5\xE6\x3\x2\x2\x2\xE6"+
		"P\x3\x2\x2\x2\xE7\xE9\x5\x35\x1B\x2\xE8\xE7\x3\x2\x2\x2\xE9\xEA\x3\x2"+
		"\x2\x2\xEA\xE8\x3\x2\x2\x2\xEA\xEB\x3\x2\x2\x2\xEB\xEC\x3\x2\x2\x2\xEC"+
		"\xF0\a\x30\x2\x2\xED\xEF\x5\x35\x1B\x2\xEE\xED\x3\x2\x2\x2\xEF\xF2\x3"+
		"\x2\x2\x2\xF0\xEE\x3\x2\x2\x2\xF0\xF1\x3\x2\x2\x2\xF1\xF4\x3\x2\x2\x2"+
		"\xF2\xF0\x3\x2\x2\x2\xF3\xF5\x5;\x1E\x2\xF4\xF3\x3\x2\x2\x2\xF4\xF5\x3"+
		"\x2\x2\x2\xF5R\x3\x2\x2\x2\xF6\xFB\a$\x2\x2\xF7\xFA\x5=\x1F\x2\xF8\xFA"+
		"\n\n\x2\x2\xF9\xF7\x3\x2\x2\x2\xF9\xF8\x3\x2\x2\x2\xFA\xFD\x3\x2\x2\x2"+
		"\xFB\xF9\x3\x2\x2\x2\xFB\xFC\x3\x2\x2\x2\xFC\xFE\x3\x2\x2\x2\xFD\xFB\x3"+
		"\x2\x2\x2\xFE\xFF\a$\x2\x2\xFFT\x3\x2\x2\x2\x100\x102\t\v\x2\x2\x101\x100"+
		"\x3\x2\x2\x2\x102\x103\x3\x2\x2\x2\x103\x101\x3\x2\x2\x2\x103\x104\x3"+
		"\x2\x2\x2\x104\x105\x3\x2\x2\x2\x105\x106\b+\x2\x2\x106V\x3\x2\x2\x2\xF"+
		"\x2\xA4\xA9\xB4\xDD\xDF\xE5\xEA\xF0\xF4\xF9\xFB\x103\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace PLC_Lab7
