//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Fazer4900\Desktop\New folder (2)\PLC_Lab7\PLC_Lab7\PLC_Lab7_expr.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace PLC_Lab7 {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class PLC_Lab7_exprLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, ADD=7, SUB=8, MUL=9, DIV=10, 
		MOD=11, CONCAT=12, AND=13, OR=14, GT=15, LT=16, EQ=17, NOTEQ=18, NOT=19, 
		ASSIGNMENT=20, IF=21, ELSE=22, WHILE=23, READ=24, WRITE=25, SEMICOLON=26, 
		L_PAR=27, R_PAR=28, COLON=29, FLOAT=30, INT=31, BOOL=32, STRING=33, OCT=34, 
		HEXA=35, COMMENT=36, WS=37, ID=38;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "ADD", "SUB", "MUL", "DIV", 
		"MOD", "CONCAT", "AND", "OR", "GT", "LT", "EQ", "NOTEQ", "NOT", "ASSIGNMENT", 
		"IF", "ELSE", "WHILE", "READ", "WRITE", "SEMICOLON", "L_PAR", "R_PAR", 
		"COLON", "FLOAT", "INT", "BOOL", "STRING", "OCT", "HEXA", "COMMENT", "WS", 
		"ID"
	};


	public PLC_Lab7_exprLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'{'", "'}'", "'int'", "'string'", "'float'", "'bool'", "'+'", "'-'", 
		"'*'", "'/'", "'%'", "'.'", "'&&'", "'||'", "'>'", "'<'", "'=='", "'!='", 
		"'!'", "'='", "'if'", "'else'", "'while'", "'read'", "'write'", "';'", 
		"'('", "')'", "','"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, "ADD", "SUB", "MUL", "DIV", 
		"MOD", "CONCAT", "AND", "OR", "GT", "LT", "EQ", "NOTEQ", "NOT", "ASSIGNMENT", 
		"IF", "ELSE", "WHILE", "READ", "WRITE", "SEMICOLON", "L_PAR", "R_PAR", 
		"COLON", "FLOAT", "INT", "BOOL", "STRING", "OCT", "HEXA", "COMMENT", "WS", 
		"ID"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "PLC_Lab7_expr.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2(\xF5\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x3\x2\x3\x2\x3\x3\x3"+
		"\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5"+
		"\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3"+
		"\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xE"+
		"\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3"+
		"\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3"+
		"\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3"+
		"\x18\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3"+
		"\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3"+
		"\x1F\x6\x1F\xAC\n\x1F\r\x1F\xE\x1F\xAD\x3\x1F\x3\x1F\x6\x1F\xB2\n\x1F"+
		"\r\x1F\xE\x1F\xB3\x3 \x6 \xB7\n \r \xE \xB8\x3!\x3!\x3!\x3!\x3!\x3!\x3"+
		"!\x3!\x3!\x5!\xC4\n!\x3\"\x3\"\a\"\xC8\n\"\f\"\xE\"\xCB\v\"\x3\"\x3\""+
		"\x3#\x3#\x6#\xD1\n#\r#\xE#\xD2\x3$\x3$\x3$\x3$\x6$\xD9\n$\r$\xE$\xDA\x3"+
		"%\x3%\x3%\x3%\a%\xE1\n%\f%\xE%\xE4\v%\x3%\x3%\x3&\x6&\xE9\n&\r&\xE&\xEA"+
		"\x3&\x3&\x3\'\x3\'\a\'\xF1\n\'\f\'\xE\'\xF4\v\'\x2\x2\x2(\x3\x2\x3\x5"+
		"\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2"+
		"\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13"+
		"%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B"+
		"\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45"+
		"\x2$G\x2%I\x2&K\x2\'M\x2(\x3\x2\n\x3\x2\x32;\x6\x2\f\f\xF\xF$$^^\x3\x2"+
		"\x32\x39\x5\x2\x32;\x43H\x63h\x4\x2\f\f\xF\xF\x5\x2\v\f\xF\xF\"\"\x5\x2"+
		"\x43\\\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\xFE\x2\x3\x3\x2\x2\x2"+
		"\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2"+
		"\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2"+
		"\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3"+
		"\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3"+
		"\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2"+
		"\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2"+
		"\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2"+
		"\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2"+
		"\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2"+
		"\x2\x2M\x3\x2\x2\x2\x3O\x3\x2\x2\x2\x5Q\x3\x2\x2\x2\aS\x3\x2\x2\x2\tW"+
		"\x3\x2\x2\x2\v^\x3\x2\x2\x2\r\x64\x3\x2\x2\x2\xFi\x3\x2\x2\x2\x11k\x3"+
		"\x2\x2\x2\x13m\x3\x2\x2\x2\x15o\x3\x2\x2\x2\x17q\x3\x2\x2\x2\x19s\x3\x2"+
		"\x2\x2\x1Bu\x3\x2\x2\x2\x1Dx\x3\x2\x2\x2\x1F{\x3\x2\x2\x2!}\x3\x2\x2\x2"+
		"#\x7F\x3\x2\x2\x2%\x82\x3\x2\x2\x2\'\x85\x3\x2\x2\x2)\x87\x3\x2\x2\x2"+
		"+\x89\x3\x2\x2\x2-\x8C\x3\x2\x2\x2/\x91\x3\x2\x2\x2\x31\x97\x3\x2\x2\x2"+
		"\x33\x9C\x3\x2\x2\x2\x35\xA2\x3\x2\x2\x2\x37\xA4\x3\x2\x2\x2\x39\xA6\x3"+
		"\x2\x2\x2;\xA8\x3\x2\x2\x2=\xAB\x3\x2\x2\x2?\xB6\x3\x2\x2\x2\x41\xC3\x3"+
		"\x2\x2\x2\x43\xC5\x3\x2\x2\x2\x45\xCE\x3\x2\x2\x2G\xD4\x3\x2\x2\x2I\xDC"+
		"\x3\x2\x2\x2K\xE8\x3\x2\x2\x2M\xEE\x3\x2\x2\x2OP\a}\x2\x2P\x4\x3\x2\x2"+
		"\x2QR\a\x7F\x2\x2R\x6\x3\x2\x2\x2ST\ak\x2\x2TU\ap\x2\x2UV\av\x2\x2V\b"+
		"\x3\x2\x2\x2WX\au\x2\x2XY\av\x2\x2YZ\at\x2\x2Z[\ak\x2\x2[\\\ap\x2\x2\\"+
		"]\ai\x2\x2]\n\x3\x2\x2\x2^_\ah\x2\x2_`\an\x2\x2`\x61\aq\x2\x2\x61\x62"+
		"\a\x63\x2\x2\x62\x63\av\x2\x2\x63\f\x3\x2\x2\x2\x64\x65\a\x64\x2\x2\x65"+
		"\x66\aq\x2\x2\x66g\aq\x2\x2gh\an\x2\x2h\xE\x3\x2\x2\x2ij\a-\x2\x2j\x10"+
		"\x3\x2\x2\x2kl\a/\x2\x2l\x12\x3\x2\x2\x2mn\a,\x2\x2n\x14\x3\x2\x2\x2o"+
		"p\a\x31\x2\x2p\x16\x3\x2\x2\x2qr\a\'\x2\x2r\x18\x3\x2\x2\x2st\a\x30\x2"+
		"\x2t\x1A\x3\x2\x2\x2uv\a(\x2\x2vw\a(\x2\x2w\x1C\x3\x2\x2\x2xy\a~\x2\x2"+
		"yz\a~\x2\x2z\x1E\x3\x2\x2\x2{|\a@\x2\x2| \x3\x2\x2\x2}~\a>\x2\x2~\"\x3"+
		"\x2\x2\x2\x7F\x80\a?\x2\x2\x80\x81\a?\x2\x2\x81$\x3\x2\x2\x2\x82\x83\a"+
		"#\x2\x2\x83\x84\a?\x2\x2\x84&\x3\x2\x2\x2\x85\x86\a#\x2\x2\x86(\x3\x2"+
		"\x2\x2\x87\x88\a?\x2\x2\x88*\x3\x2\x2\x2\x89\x8A\ak\x2\x2\x8A\x8B\ah\x2"+
		"\x2\x8B,\x3\x2\x2\x2\x8C\x8D\ag\x2\x2\x8D\x8E\an\x2\x2\x8E\x8F\au\x2\x2"+
		"\x8F\x90\ag\x2\x2\x90.\x3\x2\x2\x2\x91\x92\ay\x2\x2\x92\x93\aj\x2\x2\x93"+
		"\x94\ak\x2\x2\x94\x95\an\x2\x2\x95\x96\ag\x2\x2\x96\x30\x3\x2\x2\x2\x97"+
		"\x98\at\x2\x2\x98\x99\ag\x2\x2\x99\x9A\a\x63\x2\x2\x9A\x9B\a\x66\x2\x2"+
		"\x9B\x32\x3\x2\x2\x2\x9C\x9D\ay\x2\x2\x9D\x9E\at\x2\x2\x9E\x9F\ak\x2\x2"+
		"\x9F\xA0\av\x2\x2\xA0\xA1\ag\x2\x2\xA1\x34\x3\x2\x2\x2\xA2\xA3\a=\x2\x2"+
		"\xA3\x36\x3\x2\x2\x2\xA4\xA5\a*\x2\x2\xA5\x38\x3\x2\x2\x2\xA6\xA7\a+\x2"+
		"\x2\xA7:\x3\x2\x2\x2\xA8\xA9\a.\x2\x2\xA9<\x3\x2\x2\x2\xAA\xAC\t\x2\x2"+
		"\x2\xAB\xAA\x3\x2\x2\x2\xAC\xAD\x3\x2\x2\x2\xAD\xAB\x3\x2\x2\x2\xAD\xAE"+
		"\x3\x2\x2\x2\xAE\xAF\x3\x2\x2\x2\xAF\xB1\a\x30\x2\x2\xB0\xB2\t\x2\x2\x2"+
		"\xB1\xB0\x3\x2\x2\x2\xB2\xB3\x3\x2\x2\x2\xB3\xB1\x3\x2\x2\x2\xB3\xB4\x3"+
		"\x2\x2\x2\xB4>\x3\x2\x2\x2\xB5\xB7\t\x2\x2\x2\xB6\xB5\x3\x2\x2\x2\xB7"+
		"\xB8\x3\x2\x2\x2\xB8\xB6\x3\x2\x2\x2\xB8\xB9\x3\x2\x2\x2\xB9@\x3\x2\x2"+
		"\x2\xBA\xBB\av\x2\x2\xBB\xBC\at\x2\x2\xBC\xBD\aw\x2\x2\xBD\xC4\ag\x2\x2"+
		"\xBE\xBF\ah\x2\x2\xBF\xC0\a\x63\x2\x2\xC0\xC1\an\x2\x2\xC1\xC2\au\x2\x2"+
		"\xC2\xC4\ag\x2\x2\xC3\xBA\x3\x2\x2\x2\xC3\xBE\x3\x2\x2\x2\xC4\x42\x3\x2"+
		"\x2\x2\xC5\xC9\a$\x2\x2\xC6\xC8\n\x3\x2\x2\xC7\xC6\x3\x2\x2\x2\xC8\xCB"+
		"\x3\x2\x2\x2\xC9\xC7\x3\x2\x2\x2\xC9\xCA\x3\x2\x2\x2\xCA\xCC\x3\x2\x2"+
		"\x2\xCB\xC9\x3\x2\x2\x2\xCC\xCD\a$\x2\x2\xCD\x44\x3\x2\x2\x2\xCE\xD0\a"+
		"\x32\x2\x2\xCF\xD1\t\x4\x2\x2\xD0\xCF\x3\x2\x2\x2\xD1\xD2\x3\x2\x2\x2"+
		"\xD2\xD0\x3\x2\x2\x2\xD2\xD3\x3\x2\x2\x2\xD3\x46\x3\x2\x2\x2\xD4\xD5\a"+
		"\x32\x2\x2\xD5\xD6\az\x2\x2\xD6\xD8\x3\x2\x2\x2\xD7\xD9\t\x5\x2\x2\xD8"+
		"\xD7\x3\x2\x2\x2\xD9\xDA\x3\x2\x2\x2\xDA\xD8\x3\x2\x2\x2\xDA\xDB\x3\x2"+
		"\x2\x2\xDBH\x3\x2\x2\x2\xDC\xDD\a\x31\x2\x2\xDD\xDE\a\x31\x2\x2\xDE\xE2"+
		"\x3\x2\x2\x2\xDF\xE1\n\x6\x2\x2\xE0\xDF\x3\x2\x2\x2\xE1\xE4\x3\x2\x2\x2"+
		"\xE2\xE0\x3\x2\x2\x2\xE2\xE3\x3\x2\x2\x2\xE3\xE5\x3\x2\x2\x2\xE4\xE2\x3"+
		"\x2\x2\x2\xE5\xE6\b%\x2\x2\xE6J\x3\x2\x2\x2\xE7\xE9\t\a\x2\x2\xE8\xE7"+
		"\x3\x2\x2\x2\xE9\xEA\x3\x2\x2\x2\xEA\xE8\x3\x2\x2\x2\xEA\xEB\x3\x2\x2"+
		"\x2\xEB\xEC\x3\x2\x2\x2\xEC\xED\b&\x2\x2\xEDL\x3\x2\x2\x2\xEE\xF2\t\b"+
		"\x2\x2\xEF\xF1\t\t\x2\x2\xF0\xEF\x3\x2\x2\x2\xF1\xF4\x3\x2\x2\x2\xF2\xF0"+
		"\x3\x2\x2\x2\xF2\xF3\x3\x2\x2\x2\xF3N\x3\x2\x2\x2\xF4\xF2\x3\x2\x2\x2"+
		"\r\x2\xAD\xB3\xB8\xC3\xC9\xD2\xDA\xE2\xEA\xF2\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace PLC_Lab7
